name: TIKTOK API PROD DEPLOY

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEPLOY_PATH: /home/marcel/app  # Change this to your desired deployment path

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment directory
        run: |
          mkdir -p ${{ env.DEPLOY_PATH }}
          
      - name: Sync code to deployment directory
        run: |
          rsync -av --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='backend/videos' \
            --exclude='backend/context' \
            ./ ${{ env.DEPLOY_PATH }}/

      - name: Create .env file
        run: |
          cat > ${{ env.DEPLOY_PATH }}/.env << EOF
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PORT=${{ secrets.DB_PORT }}
          API_PORT=${{ secrets.API_PORT }}
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          REFRESH_TOKEN=${{ secrets.REFRESH_TOKEN }}
          MAX_UPLOADS=${{ secrets.MAX_UPLOADS }}
          EOF

      - name: Create videos and context directory structure
        run: |
          mkdir -p ${{ env.DEPLOY_PATH }}/backend/videos/{pending,uploading,uploaded,failed}
          mkdir -p ${{ env.DEPLOY_PATH }}/backend/context/{pending,uploading,uploaded,failed}

      - name: Stop existing containers
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          docker-compose down || true

      - name: Remove old images
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          docker-compose rm -f || true
          docker image prune -f

      - name: Build and start containers
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          docker-compose up -d --build

      - name: Wait for services to be healthy
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          echo "Waiting for services to start..."
          sleep 10
          docker-compose ps

      - name: Check service health
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          # Check if all containers are running
          if [ $(docker-compose ps -q | wc -l) -eq 3 ]; then
            echo "All services are running!"
          else
            echo "Some services failed to start!"
            docker-compose logs
            exit 1
          fi

      - name: Clean up old Docker resources
        run: |
          docker system prune -f --volumes
        continue-on-error: true

      - name: Display running containers
        working-directory: ${{ env.DEPLOY_PATH }}
        run: |
          echo "Deployment successful! Running containers:"
          docker-compose ps
          echo ""
          echo "Deployed to: ${{ env.DEPLOY_PATH }}"