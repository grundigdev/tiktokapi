package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
)

type PostInfo struct {
	Title                 string `json:"title"`
	PrivacyLevel          string `json:"privacy_level"`
	DisableDuet           bool   `json:"disable_duet"`
	DisableComment        bool   `json:"disable_comment"`
	DisableStitch         bool   `json:"disable_stitch"`
	VideoCoverTimestampMs int    `json:"video_cover_timestamp_ms"`
}

type SourceInfo struct {
	Source          string `json:"source"`
	VideoSize       int    `json:"video_size"`
	ChunkSize       int    `json:"chunk_size"`
	TotalChunkCount int    `json:"total_chunk_count"`
}

type RequestBody struct {
	PostInfo   PostInfo   `json:"post_info"`
	SourceInfo SourceInfo `json:"source_info"`
}

func main() {
	// ðŸ”¹ Variables you can change dynamically
	title := "Karambit + Animations in CS2. #counterstrike2 #csgo"
	privacy := "SELF_ONLY"
	videoSize := 1803949

	// ðŸ”¹ Build request body
	body := RequestBody{
		PostInfo: PostInfo{
			Title:                 title,
			PrivacyLevel:          privacy,
			DisableDuet:           true,
			DisableComment:        true,
			DisableStitch:         true,
			VideoCoverTimestampMs: 1000,
		},
		SourceInfo: SourceInfo{
			Source:          "FILE_UPLOAD",
			VideoSize:       videoSize,
			ChunkSize:       videoSize,
			TotalChunkCount: 1,
		},
	}

	// ðŸ”¹ Marshal into JSON
	jsonBody, err := json.Marshal(body)
	if err != nil {
		panic(err)
	}

	// ðŸ”¹ Build request
	url := "https://open.tiktokapis.com/v2/post/publish/video/init/"
	req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonBody))
	if err != nil {
		panic(err)
	}

	req.Header.Set("Authorization", "Bearer act.Hkg5zg28g3MeMXvbdUASzrfNLEWUxOvGyRZ9R2GmB3wxnIiGix6aLUddfabc!4657.e1")
	req.Header.Set("Content-Type", "application/json; charset=UTF-8")

	// ðŸ”¹ Execute
	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	respBody, _ := io.ReadAll(resp.Body)
	fmt.Println("Response:", string(respBody))
}
